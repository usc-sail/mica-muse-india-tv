source("~/projects/mica-muse-India-TV/screentime.R")
m_gender <- lm("screentime ~ gender * year", gender_data)
summary(m_gender)
rm(m_gender)
lm_gender <- lm("screentime ~ gender * year", gender_data)
lme_gender <- lme("screentime ~ gender * year + (1 | program) + (1 | lang) + (1 | genre)", gender_data)
lme_gender <- lmer("screentime ~ gender * year + (1 | program) + (1 | lang) + (1 | genre)", gender_data)
isSingular(lme_gender)
lme_gender <- lmer("screentime ~ gender * year + (gender | program)", gender_data)
summary(lme_gender)
lme_age <- lmer("screentime ~ age * year + (1 | program)", age_data)
summary(lme_age)
lme_skintone <- lmer("screentime ~ skintone * year + (1 | program)", skintone_data)
summary(lme_skintone)
lme_gender <- lmer("screentime ~ gender * year + (1 | program)", gender_data)
summary(lme_gender)
View(gender_data)
lme_gender_male <- lmer("screentime ~ year + (1 | program)", gender_male_data)
summary(lme_gender_male)
lm_gender_male <- lm("screentime ~ year", gender_male_data)
summary(lm_gender_male)
lme_gender_female <- lmer("screentime ~ year + (1 | program)", gender_female_data)
summary(lme_gender_female)
lme_gender <- lmer("screentime ~ (gender * year | program)", gender_data)
lme_gender <- lmer("screentime ~ gender * year + (1 | program:gender)", gender_data)
lme_age <- lmer("screentime ~ age * year + (1 | program:age)", age_data)
summary(lme_gender)
install.packages("jtools")
library(jtools)
jtools::summ(lme_gender)
lme_gender_male <- lmer("screentime ~ year + (1|program)", gender_male_data)
lme_gender_female <- lmer("screentime ~ year + (1|program)", gender_female_data)
lme_gender <- lmer("screentime ~ gender * year + (1|program:gender)", gender_data)
summary(lme_gender_male)
summary(lme_gender_female)
summary(lme_gender)
jtools::summ(lme_gender)
plot(lme_gender)
plot(lme_gender, which=1)
plot(lme_gender, which=2)
plot(lme_gender, which=3)
plot(lme_gender, which=4)
lme_gender2 <- lmer(screentime ~ gender * year + (1|program:gender) + (1|lang:gender), gender_data)
summary(lme_gender2)
lme_gender3 <- lmer(screentime ~ gender * year + (1|program:gender) + (1|lang:gender) + (1|genre:gender), gender_data)
summary(lme_gender3)
lme_age_young <- lmer("screentime ~ year + (1 | program)", age_young_data)
lme_age_adult <- lmer("screentime ~ year + (1 | program)", age_adult_data)
lme_age_middl <- lmer("screentime ~ year + (1 | program)", age_middleaged_data)
lme_age_old <- lmer("screentime ~ year + (1 | program)", age_old_data)
lme_age <- lmer("screentime ~ age * year + (1 | program:age)", age_data)
summary(lme_age_young)
summary(lme_age)
summary(lme_age_adult)
summary(lme_age_young)
summary(lme_age_middl)
summary(lme_age_old)
summary(lme_age)
lme_age3 <- lmer(screentime ~ age * year + (1|program:age) + (1|lang:age), age_data)
summary(lme_age3)
lme_age4 <- lmer(screentime ~ age * year + (1|program:age) + (1|lang:age) + (1|genre:age), age_data)
summary(lme_age4)
lme_skintone2 <- lmer(screentime ~ skintone * year + (1|program:skintone) + (1|lang:skintone) + (1|genre:skintone), skintone_data)
summary(lme_skintone2)
lme_gender4 <- lmer(screentime ~ gender * year + (1|program:gender) + (1|lang:gender) + (1|genre:gender), gender_data)
lme_gender_male <- lmer(screentime ~ year + (1|program) + (1|lang) + (1|genre), gender_female_data)
summary(lme_gender4)
summary(lme_gender_female)
summary(lme_gender4)
lme_gender4 <- lmer(screentime ~ gender * year + (1|program:gender) + (1|lang:gender), gender_data)
gender_data$year
data$year
scale(data$year)
gender_data_copy <- gender_data
gender_data$scaled_year <- scale(gender_data$year)
rm(gender_data_copy)
View(gender_data)
summary(gender_data)
lme_gender5 <- lmer(screentime ~ gender * scaled_year + (1|program:gender) + (1|lang:gender), gender_data)
summary(lme_gender5)
summary(lme_gender4)
lme_gender6 <- lmer(screentime ~ gender * scaled_year + (1|program:gender) + (1|lang:gender) + (1|genre:gender), gender_data)
summary(lme_gender6)
require(emmeans)
emtrends(lme_gender6, ~ gender | year)
emtrends(lme_gender6, ~ gender, var = "year")
emtrends(lme_gender6, ~ gender, var = "scaled_year")
summary(lme_gender4)
summary(lme_gender5)
summary(lme_gender3)
emtrends(lme_gender3, ~ gender, var = "year")
summary(lme_age4)
lme_age5 <- lmer(screentime ~ age * scaled_year + (1|program:age) + (1|lang:age) + (1|genre:age), age_data)
scale(age_data$year)
scale(age_data$year)$values
scale(age_data$year)$V
scale(age_data$year)$V1
x <- scale(age_data$year)
x
list(x)
age_data$scaled_year <- scale(age_data$year)
lme_age5 <- lmer(screentime ~ age * scaled_year + (1|program:age) + (1|lang:age) + (1|genre:age), age_data)
emtrends(lme_age4, ~ age, var = "year")
emtrends(lme_age5, ~ age, var = "scaled_year")
emtrends(lme_age4, ~ age, var = "year", pbkrtest.limit = 4796, lmerTest.limit = 4796)
ggplot2::ggplot(gender_data, aes(x = year, y = screentime, group = gender, color = gender)) +
ggplot2::geom_point(alpha = 0.5) +
ggplot2::geom_smooth(method = "lm", se = FALSE) +
ggplot2::theme_minimal() +
labs(y = "Screentime of Gender Categories")
ggplot2::ggplot(gender_data, ggplot2::aes(x = year, y = screentime, group = gender, color = gender)) +
+ ggplot2::geom_point(alpha = 0.5) +
+ ggplot2::geom_smooth(method = "lm", se = FALSE) +
+ ggplot2::theme_minimal() +
+ labs(y = "Screentime of Gender Categories")
ggplot2::ggplot(gender_data, ggplot2::aes(x = year, y = screentime, group = gender, color = gender)) +
ggplot2::geom_point(alpha = 0.5) +
ggplot2::geom_smooth(method = "lm", se = FALSE) +
ggplot2::theme_minimal() +
labs(y = "Screentime of Gender Categories")
ggplot2::ggplot(gender_data, ggplot2::aes(x = year, y = screentime, group = gender, color = gender)) +
ggplot2::geom_point(alpha = 0.5) +
ggplot2::geom_smooth(method = "lm", se = FALSE) +
ggplot2::theme_minimal() +
ggplot2::labs(y = "Screentime of Gender Categories")
ggplot2::ggplot(gender_data, ggplot2::aes(x = year, y = screentime, group = gender, color = gender)) +
ggplot2::geom_point(alpha = 0.5) +
ggplot2::geom_smooth(method = lme_gender4, se = FALSE) +
ggplot2::theme_minimal() +
ggplot2::labs(y = "Screentime of Gender Categories")
detach(jtools)
detach("jtools")
detach("jtools", unload = TRUE)
detach("package:jtools")
source("~/projects/mica-muse-India-TV/screentime.R")
m_gender_x_age1 <- lmer(screentime ~ gender * age + (1|program:gender) + (1|program:age), gender_x_age_data)
m_gender_x_age2 <- lmer(screentime ~ gender * age + (1|program:gender:age), gender_x_age_data)
AIC(m_gender_x_age1)
AIC(m_gender_x_age2)
m_gender_x_age3 <- lmer(screentime ~ gender * age + (1|program:gender:age) + (1|program:gender) + (1|program:age), gender_x_age_data)
summary(m_gender_x_age3)
source("~/projects/mica-muse-India-TV/screentime.R")
gender_trends
age_trends
skintone_trends
gender_x_age_trends
gender_x_skintone_trends
age_x_skintone_trends
gender_x_age_skintone_trends
View(gender_x_age_skintone_trends)
ggplot(gender_data, aes(x = year, y = screentime, group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories")
ggsave("gender_trends.png", device = "png")
ggplot(age_data,
aes(x = year, y = screentime, group = age, color = age))
+ geom_point(alpha = 0.5)
ggplot(age_data,
aes(x = year, y = screentime, group = age, color = age)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Categories")
ggsave("data/age_trends.png", device = "png")
gender_trends
View(gender_trends)
write.table(gender_trends, "data/gender_trends.tsv", sep="\t", row.names = FALSE)
ggplot(skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Categories")
ggsave("data/skintone_trends.png", device = "png")
ggplot(gender_data,
aes(x = year, y = screentime, group = age, color = age)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories") +
facet_wrap(~gender)
ggplot(gender_x_age_data,
aes(x = year, y = screentime, group = age, color = age)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Groups Within Gender Categories") +
facet_wrap(~gender)
ggsave("data/gender_x_age_trends.png", device = "png")
ggplot(gender_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender Categories") +
facet_wrap(~gender)
ggsave("data/gender_x_skintone_trends.png", device = "png")
ggplot(age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Age Categories") +
facet_wrap(~age)
ggsave("data/age_x_skintone_trends.png", device = "png")
ggplot(gender_x_age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender and Age Categories") +
facet_wrap(~gender*age)
ggsave("data/gender_x_age_x_skintone_trends.png", device = "png")
ggplot(gender_x_age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender and Age Categories") +
facet_wrap(~gender*age, nrow = 4)
ggsave("data/gender_x_age_x_skintone_trends.png", device = "png")
age_trends
skintone_trends
gender_x_age_trends
gender_x_age_trends %>% arrange(gender, age)
gender_x_skintone_trends
age_x_skintone_trends
View(gender_x_age_skintone_trends)
lang_data <- read.csv("lang_only_wide_form.csv")
lang_data <- lang_data %>%
View(lang_data)
lang_data <- read.csv("lang_only_wide_form.csv")
View(lang_data)
lang_data <- lang_data %>%
mutate(derogatory_per = 100 * derogatory / transcript)
video_lang_data <- read.csv("video_lang_wide_form.csv")
video_lang_data <- video_lang_data %>% mutate(derogatory_per = 100 * derogatory / transcript)
boxplot(derogatory_per ~ lang, lang_data)
boxplot(derogatory_per ~ lang:genre, video_lang_data)
boxplot(derogatory_per ~ lang_ln:genre, video_lang_data)
boxplot(derogatory_per ~ genre, video_lang_data)
m_derogatory <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory)
video_lang_data <- within(video_lang_data, lang_ln <- relevel(lang_ln, ref = "ta"))
video_lang_data$lang_ln <- as.factor(video_lang_data$lang_ln)
m_derogatory1 <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory1)
video_lang_data <- within(video_lang_data, lang_ln <- relevel(lang_ln, ref = "ta"))
m_derogatory2 <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory2)
emmeans(m_derogatory1, ~ lang_ln)
m_gender2 <- lmer(screentime ~ lang * gender * year + (1|program:gender) + (1|genre:gender), gender_data)
summary(m_gender2)
require(emmeans)
emtrends(m_gender2, ~gender + lang, var = "year")
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibb
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibble()
emtrends(m_gender2, ~gender + lang, var = "year") %>%
as_tibble() %>%
arrange_by(gender, lang)
require(tidyverse)
emtrends(m_gender2, ~lang + gender, var = "year")
ggplot(gender_data, )
ggplot(gender_data, aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage") +
facet_wrap(~gender)
emtrends(m_gender2, ~gender + lang, var = "year")
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibble() %>% arrange(gender, lang)
m_gender_lang <- lmer(screentime ~ gender * lang * year
+ (1|program:gender)
+ (1|genre:gender), gender_data)
gender_lang_trends <- emtrends(m_gender_lang, ~gender + lang, var = "year") %>%
as_tibble() %>% arrange(gender, lang)
m_gender_lang <- lmer(screentime ~ gender * lang * year
+ (1|program:gender)
+ (1|genre:gender), gender_data)
gender_lang_trends <- emtrends(m_gender_lang, ~gender + lang, var = "year") %>%
as_tibble() %>% arrange(gender, lang)
m_age_lang <- lmer(screentime ~ age * lang * year
+ (1|program:age)
+ (1|genre:age), age_data)
age_lang_trends <- emtrends(m_age_lang, ~age + lang, var = "year") %>%
as_tibble() %>% arrange(age, lang)
emm_options(pbkrtest.limit = 28776, lmertest.limit = 28776)
m_age_lang <- lmer(screentime ~ age * lang * year
+ (1|program:age)
+ (1|genre:age), age_data)
age_lang_trends <- emtrends(m_age_lang, ~age + lang, var = "year") %>%
as_tibble() %>% arrange(age, lang)
m_skintone_lang <- lmer(screentime ~ skintone * lang * year
+ (1|program:skintone)
+ (1|genre:skintone), skintone_data)
skintone_lang_trends <- emtrends(m_skintone_lang, ~skintone + lang,
var = "year") %>%
as_tibble() %>% arrange(skintone, lang)
ggplot(gender_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories across Languages")
ggsave("data/gender_x_lang_trends.png", device = "png")
ggplot(gender_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories across Languages") +
facet_wrap(~gender)
ggsave("data/gender_x_lang_trends.png", device = "png")
ggplot(age_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Categories across Languages") +
facet_wrap(~age)
ggsave("data/age_x_lang_trends.png", device = "png")
ggplot(skintone_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Categories across Languages") +
facet_wrap(~skintone)
ggsave("data/skintone_x_lang_trends.png", device = "png")
gender_x_lang_trends
gender_lang_trends
gender_lang_trends$year.trend
age_lang_trends
write.table(age_lang_trends, "age_lang_trends.csv")
write.table(skintone_lang_trends, "skintone_lang_trends.csv")
lang_data <- read.csv("lang_only_wide_form.csv")
lang_data$derogatory_per <- 100 * lang_data$derogatory/lang_data$transcript
lang_data$derogatory_per_nonstop <- 100 * lang_data$derogatory/lang_data$non_stopword_transcript
lang_data$controversial_per <- 100 * lang_data$controversial/lang_data$transcript
lang_data$controversial_per_nonstop <- 100 * lang_data$controversial/lang_data$non_stopword_transcript
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
emm_options(pbkrtest.limit = 28776, lmertest.limit = 28776)
## read data ----
## read long-form data (created and cleaned by @Sabyasachee)
lang_data <- read.csv("lang_only_wide_form.csv")
lang_religion_data <- read.csv("lang_only_religion_long_form.csv")
lang_gender_data <- read.csv("lang_only_gender_long_form.csv")
# derogatory words
lang_data$derogatory_per <- 100 * lang_data$derogatory / lang_data$transcript
lang_data$derogatory_per_nonstop <-
100 * lang_data$derogatory / lang_data$non_stopword_transcript
# controversial words
lang_data$controversial_per <-
100 * lang_data$controversial / lang_data$transcript
lang_data$controversial_per_nonstop <-
100 * lang_data$controversial / lang_data$non_stopword_transcript
View(lang_data)
m_derogatory <- lmer(derogatory_per ~ lang * year + (1|program) + (1|genre), lang_data)
summary(m_derogatory)
emtrends(m_derogatory, ~lang, var = "year")
m_derogatory_nonstop <- lmer(derogatory_per_nonstop ~ lang * year + (1|program) + (1|genre), lang_data)
summary(m_derogatory_nonstop)
emtrends(m_derogatory_nonstop, ~lang, var = "year")
m_controversial <- lmer(controversial_per ~ lang * year + (1|program) + (1|genre), lang_data)
View(lang_religion_data)
lang_religion_data$person_name_count_per <- lang_religion_data$person_name_count / lang_religion_data$transcript
m_religion <- lmer(person_name_count_per ~ religion * lang * year + (1|program) + (1|genre), lang_religion_data)
summary(m_religion)
emtrends(m_religion, ~lang + religion, var = "year")
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per, group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions") +
facet_wrap(~lang)
m_derogatory_overall <- lmer(derogatory_per ~ year + (1|program) + (1|lang)
+ (1|genre), lang_data)
summary(m_derogatory_overall)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_smooth(method = "lm", se = FALSE)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
lang_data <- read.csv("lang_only_wide_form.csv")
lang_religion_data <- read.csv("lang_only_religion_long_form.csv")
lang_gender_data <- read.csv("lang_only_gender_long_form.csv")
# derogatory words
lang_data$derogatory_per <- 100 * lang_data$derogatory / lang_data$transcript
# controversial words
lang_data$controversial_per <-
100 * lang_data$controversial / lang_data$transcript
# person name count
lang_religion_data$person_name_count_per <-
100 * lang_religion_data$person_name_count / lang_data$transcript
lang_gender_data$person_name_count_per <-
100 * lang_gender_data$person_name_count / lang_data$transcript
## models ---
# derogatory words
m_derogatory <- lmer(derogatory_per ~ year
+ (1|program) + (1|lang) + (1|genre), lang_data)
m_derogatory_lang <- lmer(derogatory_per ~ lang * year
+ (1|program) + (1|genre), lang_data)
# religious person names
m_religion <- lmer(person_name_count_per ~ religion * year
+ (1|program) + (1|lang) + (1|genre), lang_religion_data)
m_religion_lang <- lmer(person_name_count_per ~ religion * lang * year
+ (1|program) + (1|genre), lang_religion_data)
# gendered person names
m_gender_name <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang) + (1|genre), lang_gender_data)
m_gender_name_lang <- lmer(person_name_count_per ~ gender * lang * year
+ (1|program) + (1|genre), lang_gender_data)
summary(m_religion)
summary(m_religion_lang)
summary(m_derogatory)
library(emmeans)
emtrends(m_derogatory, ~ 1, var = "year")
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
ggsave("data/derogatory_trend.png", device = "png")
ggplot(lang_data, aes(x = year, y = derogatory_per, group = lang,
color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
ggsave("data/derogatory_x_lang_trend.png", device = "png")
emtrends(m_derogatory_lang, ~ lang, var = "year")
ggplot(lang_data, aes(x = year, y = derogatory_per, group = lang,
color = lang)) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
summary(m_derogatory_lang)
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per,
group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions")
ggsave("data/religion_trend.png", device = "png")
summary(m_religion)
emtrends(m_religion, ~religion, var = "year")
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per,
group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions") +
facet_wrap(~lang)
ggsave("data/religion_x_lang_trend.png", device = "png")
emtrends(m_religion_lang, ~lang + religion, var = "year") %>% arrange(lang, religion)
emtrends(m_religion_lang, ~lang + religion, var = "year")
emtrends(m_religion_lang, ~lang + religion, var = "year") %>% as_tibble() %>% arrange(lang, religion)
summary(m_religion_lang)
isSingular(m_religion_lang)
summary(m_gender_name)
m_gender_name <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang) + (1|genre), lang_gender_data)
summary(m_gender_name)
m_gender_name2 <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang), lang_gender_data)
ggplot(lang_gender_data, aes(x = year, y = person_name_count_per,
group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different genders")
ggsave("data/gender_name_trend.png", device = "png")
unique(lang_gender_data$gender)
emtrends(m_gender_name, ~gender, var="year")
ggplot(lang_gender_data, aes(x = year, y = person_name_count_per,
group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different genders") +
facet_wrap(~lang)
ggsave("data/gender_name_x_lang_trend.png", device = "png")
emtrends(m_gender_name_lang, ~lang + gender, var="year") %>% as_tibble() %>% arrange(lang, gender)
