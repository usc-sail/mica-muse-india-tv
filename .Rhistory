geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender and Age Categories") +
facet_wrap(~gender*age)
ggsave("data/gender_x_age_x_skintone_trends.png", device = "png")
ggplot(gender_x_age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender and Age Categories") +
facet_wrap(~gender*age, nrow = 4)
ggsave("data/gender_x_age_x_skintone_trends.png", device = "png")
age_trends
skintone_trends
gender_x_age_trends
gender_x_age_trends %>% arrange(gender, age)
gender_x_skintone_trends
age_x_skintone_trends
View(gender_x_age_skintone_trends)
lang_data <- read.csv("lang_only_wide_form.csv")
lang_data <- lang_data %>%
View(lang_data)
lang_data <- read.csv("lang_only_wide_form.csv")
View(lang_data)
lang_data <- lang_data %>%
mutate(derogatory_per = 100 * derogatory / transcript)
video_lang_data <- read.csv("video_lang_wide_form.csv")
video_lang_data <- video_lang_data %>% mutate(derogatory_per = 100 * derogatory / transcript)
boxplot(derogatory_per ~ lang, lang_data)
boxplot(derogatory_per ~ lang:genre, video_lang_data)
boxplot(derogatory_per ~ lang_ln:genre, video_lang_data)
boxplot(derogatory_per ~ genre, video_lang_data)
m_derogatory <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory)
video_lang_data <- within(video_lang_data, lang_ln <- relevel(lang_ln, ref = "ta"))
video_lang_data$lang_ln <- as.factor(video_lang_data$lang_ln)
m_derogatory1 <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory1)
video_lang_data <- within(video_lang_data, lang_ln <- relevel(lang_ln, ref = "ta"))
m_derogatory2 <- lmer(derogatory_per ~ lang_ln + (1|genre) + (1|program), video_lang_data)
summary(m_derogatory2)
emmeans(m_derogatory1, ~ lang_ln)
m_gender2 <- lmer(screentime ~ lang * gender * year + (1|program:gender) + (1|genre:gender), gender_data)
summary(m_gender2)
require(emmeans)
emtrends(m_gender2, ~gender + lang, var = "year")
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibb
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibble()
emtrends(m_gender2, ~gender + lang, var = "year") %>%
as_tibble() %>%
arrange_by(gender, lang)
require(tidyverse)
emtrends(m_gender2, ~lang + gender, var = "year")
ggplot(gender_data, )
ggplot(gender_data, aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage") +
facet_wrap(~gender)
emtrends(m_gender2, ~gender + lang, var = "year")
emtrends(m_gender2, ~gender + lang, var = "year") %>% as_tibble() %>% arrange(gender, lang)
m_gender_lang <- lmer(screentime ~ gender * lang * year
+ (1|program:gender)
+ (1|genre:gender), gender_data)
gender_lang_trends <- emtrends(m_gender_lang, ~gender + lang, var = "year") %>%
as_tibble() %>% arrange(gender, lang)
m_gender_lang <- lmer(screentime ~ gender * lang * year
+ (1|program:gender)
+ (1|genre:gender), gender_data)
gender_lang_trends <- emtrends(m_gender_lang, ~gender + lang, var = "year") %>%
as_tibble() %>% arrange(gender, lang)
m_age_lang <- lmer(screentime ~ age * lang * year
+ (1|program:age)
+ (1|genre:age), age_data)
age_lang_trends <- emtrends(m_age_lang, ~age + lang, var = "year") %>%
as_tibble() %>% arrange(age, lang)
emm_options(pbkrtest.limit = 28776, lmertest.limit = 28776)
m_age_lang <- lmer(screentime ~ age * lang * year
+ (1|program:age)
+ (1|genre:age), age_data)
age_lang_trends <- emtrends(m_age_lang, ~age + lang, var = "year") %>%
as_tibble() %>% arrange(age, lang)
m_skintone_lang <- lmer(screentime ~ skintone * lang * year
+ (1|program:skintone)
+ (1|genre:skintone), skintone_data)
skintone_lang_trends <- emtrends(m_skintone_lang, ~skintone + lang,
var = "year") %>%
as_tibble() %>% arrange(skintone, lang)
ggplot(gender_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories across Languages")
ggsave("data/gender_x_lang_trends.png", device = "png")
ggplot(gender_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories across Languages") +
facet_wrap(~gender)
ggsave("data/gender_x_lang_trends.png", device = "png")
ggplot(age_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Categories across Languages") +
facet_wrap(~age)
ggsave("data/age_x_lang_trends.png", device = "png")
ggplot(skintone_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Categories across Languages") +
facet_wrap(~skintone)
ggsave("data/skintone_x_lang_trends.png", device = "png")
gender_x_lang_trends
gender_lang_trends
gender_lang_trends$year.trend
age_lang_trends
write.table(age_lang_trends, "age_lang_trends.csv")
write.table(skintone_lang_trends, "skintone_lang_trends.csv")
lang_data <- read.csv("lang_only_wide_form.csv")
lang_data$derogatory_per <- 100 * lang_data$derogatory/lang_data$transcript
lang_data$derogatory_per_nonstop <- 100 * lang_data$derogatory/lang_data$non_stopword_transcript
lang_data$controversial_per <- 100 * lang_data$controversial/lang_data$transcript
lang_data$controversial_per_nonstop <- 100 * lang_data$controversial/lang_data$non_stopword_transcript
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
emm_options(pbkrtest.limit = 28776, lmertest.limit = 28776)
## read data ----
## read long-form data (created and cleaned by @Sabyasachee)
lang_data <- read.csv("lang_only_wide_form.csv")
lang_religion_data <- read.csv("lang_only_religion_long_form.csv")
lang_gender_data <- read.csv("lang_only_gender_long_form.csv")
# derogatory words
lang_data$derogatory_per <- 100 * lang_data$derogatory / lang_data$transcript
lang_data$derogatory_per_nonstop <-
100 * lang_data$derogatory / lang_data$non_stopword_transcript
# controversial words
lang_data$controversial_per <-
100 * lang_data$controversial / lang_data$transcript
lang_data$controversial_per_nonstop <-
100 * lang_data$controversial / lang_data$non_stopword_transcript
View(lang_data)
m_derogatory <- lmer(derogatory_per ~ lang * year + (1|program) + (1|genre), lang_data)
summary(m_derogatory)
emtrends(m_derogatory, ~lang, var = "year")
m_derogatory_nonstop <- lmer(derogatory_per_nonstop ~ lang * year + (1|program) + (1|genre), lang_data)
summary(m_derogatory_nonstop)
emtrends(m_derogatory_nonstop, ~lang, var = "year")
m_controversial <- lmer(controversial_per ~ lang * year + (1|program) + (1|genre), lang_data)
View(lang_religion_data)
lang_religion_data$person_name_count_per <- lang_religion_data$person_name_count / lang_religion_data$transcript
m_religion <- lmer(person_name_count_per ~ religion * lang * year + (1|program) + (1|genre), lang_religion_data)
summary(m_religion)
emtrends(m_religion, ~lang + religion, var = "year")
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per, group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions") +
facet_wrap(~lang)
m_derogatory_overall <- lmer(derogatory_per ~ year + (1|program) + (1|lang)
+ (1|genre), lang_data)
summary(m_derogatory_overall)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_smooth(method = "lm", se = FALSE)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal()
lang_data <- read.csv("lang_only_wide_form.csv")
lang_religion_data <- read.csv("lang_only_religion_long_form.csv")
lang_gender_data <- read.csv("lang_only_gender_long_form.csv")
# derogatory words
lang_data$derogatory_per <- 100 * lang_data$derogatory / lang_data$transcript
# controversial words
lang_data$controversial_per <-
100 * lang_data$controversial / lang_data$transcript
# person name count
lang_religion_data$person_name_count_per <-
100 * lang_religion_data$person_name_count / lang_data$transcript
lang_gender_data$person_name_count_per <-
100 * lang_gender_data$person_name_count / lang_data$transcript
## models ---
# derogatory words
m_derogatory <- lmer(derogatory_per ~ year
+ (1|program) + (1|lang) + (1|genre), lang_data)
m_derogatory_lang <- lmer(derogatory_per ~ lang * year
+ (1|program) + (1|genre), lang_data)
# religious person names
m_religion <- lmer(person_name_count_per ~ religion * year
+ (1|program) + (1|lang) + (1|genre), lang_religion_data)
m_religion_lang <- lmer(person_name_count_per ~ religion * lang * year
+ (1|program) + (1|genre), lang_religion_data)
# gendered person names
m_gender_name <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang) + (1|genre), lang_gender_data)
m_gender_name_lang <- lmer(person_name_count_per ~ gender * lang * year
+ (1|program) + (1|genre), lang_gender_data)
summary(m_religion)
summary(m_religion_lang)
summary(m_derogatory)
library(emmeans)
emtrends(m_derogatory, ~ 1, var = "year")
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
ggplot(lang_data, aes(x = year, y = derogatory_per)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
ggsave("data/derogatory_trend.png", device = "png")
ggplot(lang_data, aes(x = year, y = derogatory_per, group = lang,
color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
ggsave("data/derogatory_x_lang_trend.png", device = "png")
emtrends(m_derogatory_lang, ~ lang, var = "year")
ggplot(lang_data, aes(x = year, y = derogatory_per, group = lang,
color = lang)) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of Derogatory Words")
summary(m_derogatory_lang)
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per,
group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions")
ggsave("data/religion_trend.png", device = "png")
summary(m_religion)
emtrends(m_religion, ~religion, var = "year")
ggplot(lang_religion_data, aes(x = year, y = person_name_count_per,
group = religion, color = religion)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different religions") +
facet_wrap(~lang)
ggsave("data/religion_x_lang_trend.png", device = "png")
emtrends(m_religion_lang, ~lang + religion, var = "year") %>% arrange(lang, religion)
emtrends(m_religion_lang, ~lang + religion, var = "year")
emtrends(m_religion_lang, ~lang + religion, var = "year") %>% as_tibble() %>% arrange(lang, religion)
summary(m_religion_lang)
isSingular(m_religion_lang)
summary(m_gender_name)
m_gender_name <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang) + (1|genre), lang_gender_data)
summary(m_gender_name)
m_gender_name2 <- lmer(person_name_count_per ~ gender * year
+ (1|program) + (1|lang), lang_gender_data)
ggplot(lang_gender_data, aes(x = year, y = person_name_count_per,
group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different genders")
ggsave("data/gender_name_trend.png", device = "png")
unique(lang_gender_data$gender)
emtrends(m_gender_name, ~gender, var="year")
ggplot(lang_gender_data, aes(x = year, y = person_name_count_per,
group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Percentage of person names of different genders") +
facet_wrap(~lang)
ggsave("data/gender_name_x_lang_trend.png", device = "png")
emtrends(m_gender_name_lang, ~lang + gender, var="year") %>% as_tibble() %>% arrange(lang, gender)
# set up ----------------------------------------------------------------------
## load libraries ----
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
emm_options(pbkrtest.limit = 28776, lmertest.limit = 28776)
## read data ----
## read long-form data (created and cleaned by @Sabyasachee)
data <- read.csv("data/long_video.csv")
gender_data <- data %>%
group_by(key, program, lang, genre, year, gender) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
age_data <- data %>%
group_by(key, program, lang, genre, year, age) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
skintone_data <- data %>%
group_by(key, program, lang, genre, year, skintone) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
gender_x_age_data <- data %>%
group_by(key, program, lang, genre, year, gender, age) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
gender_x_skintone_data <- data %>%
group_by(key, program, lang, genre, year, gender, skintone) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
age_x_skintone_data <- data %>%
group_by(key, program, lang, genre, year, age, skintone) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
gender_x_age_x_skintone_data <- data %>%
group_by(key, program, lang, genre, year, gender, age, skintone) %>%
summarise(n = sum(faces), .groups = "drop") %>%
group_by(key, program, lang, genre, year) %>%
mutate(screentime = n / (sum(n) + 1e-23) * 100) %>%
ungroup()
# models
# gender
print("screentime ~ gender * year + (1|program:gender) + (1|lang:gender) + (1|genre:gender)")
m_gender <- lmer(screentime ~ gender * year
+ (1|program:gender)
+ (1|lang:gender)
+ (1|genre:gender), gender_data)
gender_trends <- emtrends(m_gender, ~gender, var="year")
print("screentime ~ gender * lang * year + (1|program:gender) + (1|genre:gender)")
m_gender_x_lang <- lmer(screentime ~ gender * lang * year
+ (1|program:gender)
+ (1|genre:gender), gender_data)
gender_x_lang_trends <- emtrends(m_gender_x_lang, ~gender + lang, var = "year") %>%
as_tibble() %>% arrange(gender, lang)
# age
print("screentime ~ age * year + (1|program:age) + (1|lang:age) + (1|genre:age)")
m_age <- lmer(screentime ~ age * year
+ (1|program:age)
+ (1|lang:age)
+ (1|genre:age), age_data)
age_trends <- emtrends(m_age, ~age, var="year")
print("screentime ~ age * lang * year + (1|program:age) + (1|genre:age)")
m_age_x_lang <- lmer(screentime ~ age * lang * year
+ (1|program:age)
+ (1|genre:age), age_data)
age_x_lang_trends <- emtrends(m_age_x_lang, ~age + lang, var = "year") %>%
as_tibble() %>% arrange(age, lang)
# skintone
print("screentime ~ skintone * year + (1|program:skintone) + (1|lang:skintone) + (1|genre:skintone)")
m_skintone <- lmer(screentime ~ skintone * year
+ (1|program:skintone)
+ (1|lang:skintone)
+ (1|genre:skintone), skintone_data)
skintone_trends <- emtrends(m_skintone, ~skintone, var="year")
print("screentime ~ skintone * lang * year + (1|program:skintone) + (1|genre:skintone)")
m_skintone_x_lang <- lmer(screentime ~ skintone * lang * year
+ (1|program:skintone)
+ (1|genre:skintone), skintone_data)
skintone_x_lang_trends <- emtrends(m_skintone_x_lang, ~skintone + lang,
var = "year") %>%
as_tibble() %>% arrange(skintone, lang)
# gender x age
print("screentime ~ gender * age * year + (1|program:gender:age) + (1|lang:gender:age) + (1|genre:gender:age)")
m_gender_x_age <- lmer(screentime ~ gender * age * year
+ (1|program:gender:age)
+ (1|lang:gender:age)
+ (1|genre:gender:age),
gender_x_age_data)
gender_x_age_trends <- emtrends(m_gender_x_age, ~ age + gender, var="year") %>%
as_tibble() %>% arrange(age, gender)
# gender x skintone
print("screentime ~ gender * skintone * year + (1|program:gender:skintone) + (1|lang:gender:skintone) + (1|genre:gender:skintone)")
m_gender_x_skintone <- lmer(screentime ~ gender * skintone * year
+ (1|program:gender:skintone)
+ (1|lang:gender:skintone)
+ (1|genre:gender:skintone), gender_x_skintone_data)
gender_x_skintone_trends <- emtrends(m_gender_x_skintone, ~ skintone + gender,
var="year") %>%
as_tibble() %>% arrange(skintone, gender)
# age x skintone
print("screentime ~ age * skintone * year + (1|program:age:skintone) + (1|lang:age:skintone) + (1|genre:age:skintone)")
m_age_x_skintone <- lmer(screentime ~ age * skintone * year
+ (1|program:age:skintone)
+ (1|lang:age:skintone)
+ (1|genre:age:skintone), age_x_skintone_data)
age_x_skintone_trends <- emtrends(m_age_x_skintone, ~ age + skintone,
var="year") %>%
as_tibble() %>% arrange(age, skintone)
# gender x age x skintone
print("screentime ~ gender * age * skintone * year + (1|program:gender:age:skintone) + (1|lang:gender:age:skintone) + (1|genre:gender:age:skintone)")
m_gender_x_age_x_skintone <- lmer(screentime ~ gender * age * skintone * year
+ (1|program:gender:age:skintone)
+ (1|lang:gender:age:skintone)
+ (1|genre:gender:age:skintone),
gender_x_age_x_skintone_data)
ggplot(gender_data,
aes(x = year, y = screentime, group = gender, color = gender)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories")
ggsave("data/plots/gender_trends.png", device = "png")
ggplot(gender_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Gender Categories across Languages") +
facet_wrap(~gender)
ggsave("data/plots/gender_x_lang_trends.png", device = "png")
# age
ggplot(age_data,
aes(x = year, y = screentime, group = age, color = age)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Categories")
ggsave("data/plots/age_trends.png", device = "png")
ggplot(age_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Categories across Languages") +
facet_wrap(~age)
ggsave("data/plots/age_x_lang_trends.png", device = "png")
# skintone
ggplot(skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Categories")
ggsave("data/plots/skintone_trends.png", device = "png")
ggplot(skintone_data,
aes(x = year, y = screentime, group = lang, color = lang)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Categories across Languages") +
facet_wrap(~skintone)
ggsave("data/plots/skintone_x_lang_trends.png", device = "png")
# gender x age
ggplot(gender_x_age_data,
aes(x = year, y = screentime, group = age, color = age)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Age Groups Within Gender Categories") +
facet_wrap(~gender)
ggsave("data/plots/gender_x_age_trends.png", device = "png")
# gender x skintone
ggplot(gender_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender Categories") +
facet_wrap(~gender)
ggsave("data/plots/gender_x_skintone_trends.png", device = "png")
# age x skintone
ggplot(age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Age Categories") +
facet_wrap(~age)
ggsave("data/plots/age_x_skintone_trends.png", device = "png")
# gender x age x skintone
ggplot(gender_x_age_x_skintone_data,
aes(x = year, y = screentime, group = skintone, color = skintone)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(y = "Screentime Percentage of Skintone Groups Within Gender and Age Categories") +
facet_wrap(~gender*age, nrow = 4)
ggsave("data/plots/gender_x_age_x_skintone_trends.png", device = "png")
gender_trends
library(lme4)
library(lmerTest)
library(emmeans)
library(tidyverse)
library(Kendall)
gender_trends %>% as_tibble()
gender_x_lang_trends
age_trends
age_x_lang_trends
